{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dimon\\\\Desktop\\\\react\\\\portfolio\\\\src\\\\Skills\\\\Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport \"../styles/Skills.css\";\nimport Posts from './Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Skills = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [limit, setLimit] = useState(15);\n  const [page, setPage] = useState(1);\n  const [arrayPages, setArrayPages] = useState([]);\n  const lastElement = useRef();\n  const observer = useRef();\n  const [test, setTest] = us;\n  function countPages() {\n    for (let i = 0; i < totalCount; i++) {\n      setArrayPages(arrayPages => [...arrayPages, i + 1]);\n    }\n  }\n  useEffect(() => {\n    var callback = (entries, observer) => {\n      if (posts.length === 0) return;\n      if (observer.current) observer.current.disconect();\n      if (entries[0].isIntersecting) {\n        setPage(page + 1);\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(lastElement.current);\n  }, [posts]);\n  console.log(posts);\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  useMemo(() => {\n    countPages();\n  }, [totalCount]);\n  async function fetchPosts() {\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`).then(response => (setTotalCount(Math.ceil(response.headers.get(\"x-total-count\") / limit)), response.json())).then(response => {\n      posts.length === 0 ? setPosts(response) : setPosts(...posts, response);\n    }).catch(err => console.error(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title_name\",\n      children: \"Here I implement some functions to show what I know and can do on React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block_of_posts\",\n      children: posts.map((posts, index) => /*#__PURE__*/_jsxDEV(Posts, {\n        posts: posts,\n        number: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement,\n      className: \"horizon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_pages\",\n      children: arrayPages.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setPage(index),\n        className: page === index ? \"page page_current\" : \"page\",\n        children: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(Skills, \"uH3hvQrpV74wYax1EXlJSdIMtKo=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Posts","jsxDEV","_jsxDEV","Skills","_s","posts","setPosts","totalCount","setTotalCount","limit","setLimit","page","setPage","arrayPages","setArrayPages","lastElement","observer","test","setTest","us","countPages","i","callback","entries","length","current","disconect","isIntersecting","IntersectionObserver","observe","console","log","fetchPosts","fetch","then","response","Math","ceil","headers","get","json","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","number","ref","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dimon/Desktop/react/portfolio/src/Skills/Skills.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport \"../styles/Skills.css\"\r\nimport Posts from './Posts'\r\n\r\nconst Skills = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0)\r\n  const [limit, setLimit] = useState(15);\r\n  const [page, setPage] = useState(1);\r\n  const [arrayPages, setArrayPages] = useState([])\r\n  const lastElement = useRef()\r\n  const observer = useRef()\r\n  const [test, setTest] = us\r\n\r\n\r\n  function countPages (){\r\n    for (let i = 0; i < totalCount; i++){\r\n      setArrayPages(arrayPages => [...arrayPages, i+1])\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    \r\n    var callback = (entries, observer) => {\r\n      if (posts.length === 0) return\r\n      if (observer.current) observer.current.disconect();\r\n      if (entries[0].isIntersecting){\r\n        setPage(page +1)\r\n      }\r\n    }\r\n    \r\n    observer.current = new IntersectionObserver(callback);\r\n    observer.current.observe(lastElement.current)\r\n  }, [posts] )\r\n\r\n\r\n  console.log(posts)\r\n\r\n  useEffect( () => {\r\n    fetchPosts();\r\n  }, [page])\r\n\r\n  useMemo ( () => {\r\n    countPages()\r\n  }, [totalCount]\r\n\r\n  )\r\n\r\n  async function fetchPosts() {\r\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`)\r\n      .then(response => (setTotalCount(Math.ceil(response.headers.get(\"x-total-count\") / limit)), response.json()))\r\n      .then(response => {posts.length === 0 ? (setPosts(response)) : (setPosts(...posts, response))})\r\n      .catch(err => console.error(err))\r\n    }\r\n  \r\n\r\n  return (\r\n    <div className='global_page'>\r\n      <p className='title_name'>Here I implement some functions to show what I know and can do on React</p>\r\n      <div className='block_of_posts'>\r\n        {posts.map((posts, index)  => <Posts key={index} posts={posts} number={index +1} /> )}\r\n      </div>\r\n      <div ref={lastElement} className='horizon'></div>\r\n      <div className='buttons_pages'>\r\n        {arrayPages.map((index) => <div \r\n        onClick={() => setPage(index)}\r\n        key={index}\r\n        className={page === index ? \"page page_current\" : \"page\"}>{index}</div>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}