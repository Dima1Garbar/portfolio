{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dimon\\\\Desktop\\\\react\\\\portfolio\\\\src\\\\Skills\\\\Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useRef, useState } from 'react';\nimport \"../styles/Skills.css\";\nimport Posts from './Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Skills = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [limit, setLimit] = useState(15);\n  const [page, setPage] = useState(1);\n  const [arrayPages, setArrayPages] = useState([]);\n  const lastElement = useRef();\n  const observer = useRef();\n  const [pushButton, setPushButton] = useState(false);\n  function countPages() {\n    for (let i = 0; i < totalCount; i++) {\n      setArrayPages(arrayPages => [...arrayPages, i + 1]);\n    }\n  }\n  useEffect(() => {\n    var callback = (entries, observer) => {\n      if (posts.length === 0) return;\n      if (observer.current) observer.current.disconect();\n      if (entries[0].isIntersecting && page < totalCount) {\n        setPage(page + 1);\n      }\n    };\n    observer.current = new IntersectionObserver(callback);\n    observer.current.observe(lastElement.current);\n  }, [posts]);\n  useEffect(() => {\n    fetchPosts();\n  }, [page]);\n  useMemo(() => {\n    countPages();\n  }, [totalCount]);\n  async function fetchPosts() {\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`).then(response => (setTotalCount(Math.ceil(response.headers.get(\"x-total-count\") / limit)), response.json())).then(response => {\n      pushButton == false ? setPosts(posts => [...posts, ...response]) : setPosts(response);\n      setPushButton(false);\n    }).catch(err => console.error(err));\n    console.log(pushButton);\n  }\n\n  //        <Posts key={index} posts={posts} number={index +1} /> )\n\n  function Test(postss, index) {\n    if (index === 14) {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: lastElement,\n        className: \"horizon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, this);\n      /*#__PURE__*/_jsxDEV(Posts, {\n        posts: postss,\n        number: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 7\n      }, this);\n    } else {\n      /*#__PURE__*/_jsxDEV(Posts, {\n        posts: postss,\n        number: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title_name\",\n      children: \"Here I implement some functions to show what I know and can do on React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_pages\",\n      children: arrayPages.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          setPushButton(true);\n          setPage(index);\n        },\n        className: page === index ? \"page page_current\" : \"page\",\n        children: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block_of_posts\",\n      children: posts.map((postss, index) => Test(postss, index))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(Skills, \"HMDhTcQ2CV5XiBubj0hzI9cifQo=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useMemo","useRef","useState","Posts","jsxDEV","_jsxDEV","Skills","_s","posts","setPosts","totalCount","setTotalCount","limit","setLimit","page","setPage","arrayPages","setArrayPages","lastElement","observer","pushButton","setPushButton","countPages","i","callback","entries","length","current","disconect","isIntersecting","IntersectionObserver","observe","fetchPosts","fetch","then","response","Math","ceil","headers","get","json","catch","err","console","error","log","Test","postss","index","ref","className","fileName","_jsxFileName","lineNumber","columnNumber","number","children","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Dimon/Desktop/react/portfolio/src/Skills/Skills.js"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState } from 'react'\r\nimport \"../styles/Skills.css\"\r\nimport Posts from './Posts'\r\n\r\nconst Skills = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0)\r\n  const [limit, setLimit] = useState(15);\r\n  const [page, setPage] = useState(1);\r\n  const [arrayPages, setArrayPages] = useState([])\r\n  const lastElement = useRef()\r\n  const observer = useRef()\r\n  const [pushButton, setPushButton]  = useState(false)\r\n\r\n\r\n  function countPages (){\r\n    for (let i = 0; i < totalCount; i++){\r\n      setArrayPages(arrayPages => [...arrayPages, i+1])\r\n    }\r\n  }\r\n\r\n  useEffect( () => {\r\n    \r\n    var callback = (entries, observer) => {\r\n      if (posts.length === 0) return\r\n      if (observer.current) observer.current.disconect();\r\n      if (entries[0].isIntersecting && page < totalCount){\r\n        setPage(page +1)\r\n      }\r\n    }\r\n    \r\n    observer.current = new IntersectionObserver(callback);\r\n    observer.current.observe(lastElement.current)\r\n  }, [posts] )\r\n\r\n\r\n  useEffect( () => {\r\n    fetchPosts();\r\n  }, [page])\r\n\r\n  useMemo ( () => {\r\n    countPages()\r\n  }, [totalCount]\r\n\r\n  )\r\n\r\n  async function fetchPosts() {\r\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`)\r\n      .then(response => (setTotalCount(Math.ceil(response.headers.get(\"x-total-count\") / limit)), response.json()))\r\n      .then(response => {pushButton == false ? setPosts(posts => [...posts, ...response]) : setPosts(response); setPushButton(false)})\r\n      .catch(err => console.error(err))\r\n      console.log(pushButton)\r\n    }\r\n  \r\n//        <Posts key={index} posts={posts} number={index +1} /> )\r\n\r\n\r\n  function Test(postss, index) {\r\n    if (index === 14) {\r\n      <div ref={lastElement} className='horizon'></div>;\r\n      <Posts  key={index} posts={postss} number={index +1}  />\r\n    }\r\n    else {<Posts  key={index} posts={postss} number={index +1}  /> }\r\n  } \r\n\r\n  return (\r\n    <div className='global_page'>  \r\n      <p className='title_name'>Here I implement some functions to show what I know and can do on React</p>\r\n      <div className='buttons_pages'>\r\n        {arrayPages.map((index) => <div \r\n        onClick={() => {setPushButton(true); setPage(index)}}\r\n        key={index}\r\n        className={page === index ? \"page page_current\" : \"page\"}>{index}\r\n        </div>)}\r\n      </div>\r\n      <div className='block_of_posts'>\r\n        {posts.map((postss, index)  => Test(postss, index))}\r\n       \r\n        \r\n        \r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}