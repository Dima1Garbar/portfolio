{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dimon\\\\Desktop\\\\react\\\\portfolio\\\\src\\\\Skills\\\\Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useMemo, useState } from 'react';\nimport \"../styles/Skills.css\";\nimport Posts from './Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Skills = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [limit, setLimit] = useState(15);\n  const [page, setPage] = useState(1);\n  const [arrayPages, setArrayPages] = useState([]);\n  function countPages() {\n    for (let i = 0; i < totalCount; i++) {\n      setArrayPages(arrayPages => [...arrayPages, i + 1]);\n    }\n  }\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  useMemo(() => {\n    countPages();\n  }, [totalCount]);\n  async function fetchPosts() {\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`).then(response => (setTotalCount(Math.ceil(response.headers.get(\"x-total-count\") / limit)), response.json())).then(response => setPosts(response)).catch(err => console.error(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title_name\",\n      children: \"Here I implement some functions to show what I know and can do on React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block_of_posts\",\n      children: posts.map((posts, index) => /*#__PURE__*/_jsxDEV(Posts, {\n        remove: removePost,\n        posts: posts,\n        number: index + 1\n      }, posts.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons_pages\",\n      children: arrayPages.map(index => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => setPa,\n        className: page === index ? \"page page_current\" : \"page\",\n        children: index\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 36\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Skills, \"7OaG4Nb+pkA/lrrqtGQE+nP3LWo=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useMemo","useState","Posts","jsxDEV","_jsxDEV","Skills","_s","posts","setPosts","totalCount","setTotalCount","limit","setLimit","page","setPage","arrayPages","setArrayPages","countPages","i","removePost","post","filter","p","id","fetchPosts","fetch","then","response","Math","ceil","headers","get","json","catch","err","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","remove","number","onClick","setPa","_c","$RefreshReg$"],"sources":["C:/Users/Dimon/Desktop/react/portfolio/src/Skills/Skills.js"],"sourcesContent":["import React, { useEffect, useMemo, useState } from 'react'\r\nimport \"../styles/Skills.css\"\r\nimport Posts from './Posts'\r\n\r\nconst Skills = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0)\r\n  const [limit, setLimit] = useState(15);\r\n  const [page, setPage] = useState(1);\r\n  const [arrayPages, setArrayPages] = useState([])\r\n \r\n  function countPages (){\r\n    for (let i = 0; i < totalCount; i++){\r\n      setArrayPages(arrayPages => [...arrayPages, i+1])\r\n    }\r\n  }\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id)) \r\n  }\r\n\r\n  useEffect( () => {\r\n    fetchPosts();\r\n  }, [])\r\n\r\n  useMemo ( () => {\r\n    countPages()\r\n  }, [totalCount]\r\n\r\n  )\r\n\r\n  async function fetchPosts() {\r\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`)\r\n      .then(response => (setTotalCount(Math.ceil(response.headers.get(\"x-total-count\") / limit)), response.json()))\r\n      .then(response => (setPosts(response)))      \r\n      .catch(err => console.error(err))\r\n    \r\n    }\r\n  \r\n\r\n  return (\r\n    <div className='global_page'>\r\n      <p className='title_name'>Here I implement some functions to show what I know and can do on React</p>\r\n      <div className='block_of_posts'>\r\n        {posts.map((posts, index)  => <Posts key={posts.id} remove={removePost} posts={posts} number={index +1} /> )}\r\n      </div>\r\n      <div className='buttons_pages'>\r\n        {arrayPages.map((index) => <div \r\n        onClick={() => setPa}\r\n        key={index}\r\n        className={page === index ? \"page page_current\" : \"page\"}>{index}</div>)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}