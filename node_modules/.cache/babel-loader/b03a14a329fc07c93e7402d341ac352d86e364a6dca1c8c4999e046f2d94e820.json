{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dimon\\\\Desktop\\\\react\\\\portfolio\\\\src\\\\Skills\\\\Skills.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport \"../styles/Skills.css\";\nimport Posts from './Posts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Skills = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [totalCount, setTotalCount] = useState(0);\n  const [limit, setLimit] = useState(15);\n  const [page, setPage] = useState(4);\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  useEffect(() => {\n    fetchPosts();\n  }, []);\n  console.log(totalCount);\n  async function fetchPosts() {\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`).then(response => (setTotalCount(response.headers.get(\"x-total-count\")), response.json())).then(response => setPosts(response)).catch(err => console.error(err));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"global_page\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"title_name\",\n      children: \"Here I implement some functions to show what I know and can do on React\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"block_of_posts\",\n      children: posts.map((posts, index) => /*#__PURE__*/_jsxDEV(Posts, {\n        remove: removePost,\n        posts: posts,\n        number: index + 1\n      }, posts.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 39\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Skills, \"DIzWgHqSJfvG1tXcCGFB+3WHg98=\");\n_c = Skills;\nexport default Skills;\nvar _c;\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useState","Posts","jsxDEV","_jsxDEV","Skills","_s","posts","setPosts","totalCount","setTotalCount","limit","setLimit","page","setPage","removePost","post","filter","p","id","fetchPosts","console","log","fetch","then","response","headers","get","json","catch","err","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","remove","number","_c","$RefreshReg$"],"sources":["C:/Users/Dimon/Desktop/react/portfolio/src/Skills/Skills.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport \"../styles/Skills.css\"\r\nimport Posts from './Posts'\r\n\r\nconst Skills = () => {\r\n\r\n  const [posts, setPosts] = useState([]);\r\n  const [totalCount, setTotalCount] = useState(0)\r\n  const [limit, setLimit] = useState(15);\r\n  const [page, setPage] = useState(4);\r\n\r\n\r\n  const removePost = (post) => {\r\n    setPosts(posts.filter(p => p.id !== post.id)) \r\n  }\r\n\r\n\r\n  useEffect( () => {\r\n    fetchPosts();\r\n  }, [])\r\n\r\n  console.log(totalCount)\r\n\r\n  async function fetchPosts() {\r\n    await fetch(`https://jsonplaceholder.typicode.com/comments?_limit=${limit}&_page=${page}`)\r\n      .then(response => (setTotalCount(response.headers.get(\"x-total-count\")), response.json()))\r\n      .then(response => (setPosts(response)))      \r\n      .catch(err => console.error(err))\r\n    \r\n    }\r\n  \r\n\r\n  return (\r\n    <div className='global_page'>\r\n      <p className='title_name'>Here I implement some functions to show what I know and can do on React</p>\r\n      <div className='block_of_posts'>\r\n        {posts.map((posts, index)  => <Posts key={posts.id} remove={removePost} posts={posts} number={index +1} /> )}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Skills\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EAGnC,MAAMc,UAAU,GAAIC,IAAI,IAAK;IAC3BR,QAAQ,CAACD,KAAK,CAACU,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAAC;EAC/C,CAAC;EAGDnB,SAAS,CAAE,MAAM;IACfoB,UAAU,EAAE;EACd,CAAC,EAAE,EAAE,CAAC;EAENC,OAAO,CAACC,GAAG,CAACb,UAAU,CAAC;EAEvB,eAAeW,UAAUA,CAAA,EAAG;IAC1B,MAAMG,KAAK,CAAE,wDAAuDZ,KAAM,UAASE,IAAK,EAAC,CAAC,CACvFW,IAAI,CAACC,QAAQ,KAAKf,aAAa,CAACe,QAAQ,CAACC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC,CAAC,EAAEF,QAAQ,CAACG,IAAI,EAAE,CAAC,CAAC,CACzFJ,IAAI,CAACC,QAAQ,IAAKjB,QAAQ,CAACiB,QAAQ,CAAE,CAAC,CACtCI,KAAK,CAACC,GAAG,IAAIT,OAAO,CAACU,KAAK,CAACD,GAAG,CAAC,CAAC;EAEnC;EAGF,oBACE1B,OAAA;IAAK4B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B7B,OAAA;MAAG4B,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAuE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACrGjC,OAAA;MAAK4B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B1B,KAAK,CAAC+B,GAAG,CAAC,CAAC/B,KAAK,EAAEgC,KAAK,kBAAMnC,OAAA,CAACF,KAAK;QAAgBsC,MAAM,EAAEzB,UAAW;QAACR,KAAK,EAAEA,KAAM;QAACkC,MAAM,EAAEF,KAAK,GAAE;MAAE,GAA7DhC,KAAK,CAACY,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAwD;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACtG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEV,CAAC;AAAA/B,EAAA,CApCKD,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAsCZ,eAAeA,MAAM;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}